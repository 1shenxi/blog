(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{226:function(t,s,e){"use strict";e.r(s);var n=e(28),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" Typescript")]),t._v(" "),e("h2",{attrs:{id:"tsconfig-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Visit https://aka.ms/tsconfig.json to read more about this file */")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Basic Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许导入 js文件。如果为 false，在 ts 文件中 import js文件会报错。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"allowJs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/** 与 “allowjs” 协同，会对 js 中的使用，也进行类型校验。\n     *  例如："checkJs": false,\n     *  @file1.js\n     *  export default const pi = parseFloat(3.14)   // 其实 parseFloat(str: String), 入参规定是 字符串。\n     *  @file2.ts\n     *  import pi from \'files1.js\'  // 这里不会报错。如果，"checkJs": true, 则会报错，入参必须为 String.\n     */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkJs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 启动工程编译：\n     * \n     * ❓不太懂什么意思。\n     * \n     * 前置条件：\n     * - `allowJs` 属性必须开启。\n     * - 设置 `rootDir` 配置项。\n     * - 所有的声明文件都必须在 `includes` 和 `files` 属性中有列出来。\n     * - 复合功能的开启，强依赖，`declaration` 的开启。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"composite"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 为项目下的 ts 和 js 文件生成，对应的 d.ts 声明文件\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"declaration"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @origin `Generates a sourcemap for each corresponding '.d.ts' file.`\n     * \n     * declarationMap 属性，依赖于 `declaration` 或 `composite` 属性中的任意一个\n     * 开启后，会生成 .d.ts.map 文件，对应源 .d.ts 文件的 sourceMap.\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"declarationMap"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @origin `Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.`\n     * \n     * 为 false 时，则对迭代器的写法默认自动降级成 for 循环。\n     * 例如，for-of, [...arr], function(...args) 和 Symbol.iterator, 都会被转换成 for 循环进行赋值。\n     * \n     * 注意⚠️：虽然绝大多数情况下是满足期望的，但不是百分百。例如，很多 emoji，如（😜），for 循环的长度为2，甚至更多，但是迭代器只会读取到一个。\n     * 关于这个可以看[1.this blog post by Jonathan New]的博客, 本末有链接。\n     * \n     * 如果，Symbol.iterator 不被提供在运行时，就存在一些问题。如下：\n     * // Make an array where the '1' element is missing\n     * let missing = [0, , 1];\n     * let spreaded = [...missing];\n     * let concated = [].concat(missing);\n     * \n     * // true\n     * \"1\" in spreaded;\n     * // false\n     * \"1\" in concated;\n     * \n     * 所有，只有当 Symbol.iterator，被提供的时候才能更加准备的模仿 ES6 的行为。\n     * \n     * 简而言之，开启就对了，可以尽可能提高合法性。（如果原生不支持，Symbol.iterator就尴尬了。)\n     * 假想：能否通过 babel 对 Symbol 的垫片来完成更加低版本的兼容问题。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"downlevelIteration"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n     * @origin `Import emit helpers from 'tslib'.`\n     * \n     * 简称为：导入助手。\n     * 在降级过程中，例如上面对迭代器的兼容，使用一个 for循环的函数。如果，很多文件都有使用的话，则会每个文件都有自己的一个迭代器的实现。\n     * downlevelIteration 和 importHelpers 开启的话，就会去引入 'tslib' 来进行模版的复用。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"importHelpers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @origin `Enable incremental compilation`\n     * \n     * 创建一个 .tsbuildinfo 后缀的名称，跟随在 tsconfig.json 目录中。\n     * 功能是，展示一个对项目中依赖关系的图文件，可以随时删除，对项目无影响。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"incremental"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @origin `Transpile each file as a separate module (similar to 'ts.transpileModule').`\n     * \n     * 对每个文件都进行隔离模块导出。即，必须在文件中使用 import/export.\n     * 场景：\n     *  // 假设 someType 根本没被定义，没有这个导出项，那么 export 出的 someType 将被过滤掉。从而引发 js 运行时错误。\n     *  import { someType, someFunction } from \"someModule\";\n     *  someFunction();\n     *  export { someType, someFunction };\n     *  \n     * ❓个人疑问：someType 没写，按理来说不是，ts 编译器就会报错，为什么，到运行时？还是说，其他的编译器可以通过？例如，babel。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"isolatedModules"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @origin `Specify JSX code generation: 'preserve', 'react-native', or 'react'.`\n     * 对 jsx 语法的内置支持。三种支持的区别为：\n     * 模式             输入         输出                        输出文件扩展名\n     * preserve\t      <div />   \t<div />\t                       .jsx\n     * react\t        <div />\t   React.createElement(\"div\")\t     .js\n     * react-native\t  <div />\t    <div />\t                       .js\n     * \n     * 碰到问题1: JSX 元素隐式具有类型 \"any\"，因为不存在接口 \"JSX.IntrinsicElements\"。\n     * 解决：React 对 IntrinsicElements 接口， Element 接口等都进行了实现，貌似在 react.d.ts\n     * TODO: 找到声明的 types 包。\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsx"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preserve"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n     * @origin `Specify library files to be included in the compilation.`\n     * \n     */")]),t._v("                   \n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"sourceMap\": true,                     /* Generates corresponding '.map' file. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "outFile": "./",                       /* Concatenate and emit output to single file. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "outDir": "./",                        /* Redirect output structure to the directory. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "removeComments": true,                /* Do not emit comments to output. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noEmit": true,                        /* Do not emit outputs. */')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Strict Type-Checking Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strict"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Enable all strict type-checking options. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"noImplicitAny\": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "strictNullChecks": true,              /* Enable strict null checks. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "strictFunctionTypes": true,           /* Enable strict checking of function types. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"strictBindCallApply\": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"noImplicitThis\": true,                /* Raise error on 'this' expressions with an implied 'any' type. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Additional Checks */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noUnusedLocals": true,                /* Report errors on unused locals. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noUnusedParameters": true,            /* Report errors on unused parameters. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Module Resolution Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"moduleResolution\": \"node\",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"paths\": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "typeRoots": [],                       /* List of folders to include type definitions from. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "types": [],                           /* Type declaration files to be included in compilation. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"esModuleInterop"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Source Map Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"inlineSources\": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Experimental Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Advanced Options */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"skipLibCheck"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Skip type checking of declaration files. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forceConsistentCasingInFileNames"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Disallow inconsistently-cased references to the same file. */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[e("a",{attrs:{href:"https://blog.jonnew.com/posts/poo-dot-length-equals-two",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.this blog post by Jonathan New"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);